{{- $context := . -}}
{{- $pagetype := slice "accessibility" "quality" "performance" -}}
{{- $.Scratch.Set "folder" "" -}}
{{- $.Scratch.Set "slugs" slice -}}
{{- range $idx, $value := $pagetype -}}
  {{- range readDir "content/audits/" -}}{{- $slug := .Name -}}
    {{- $.Scratch.Add "slugs" $slug -}}
    {{- $.Scratch.Set "folder" $value -}}{{- if eq $value "performance" -}}{{- $.Scratch.Set "folder" "lighthouse" -}}{{- end -}}
    {{- $.Scratch.Set (printf "rootpath%s" ($.Scratch.Get "folder")) (partialCached "render/rootpath" (dict "context" . "project" $slug "type" "accessibility") $slug "accessibility") -}}
    {{- if fileExists (printf "%s/%s/%s" ($.Scratch.Get (printf "rootpath%s" ($.Scratch.Get "folder"))) $slug ($.Scratch.Get "folder")) }}
    {{- range readDir (printf "%s/%s/%s" ($.Scratch.Get (printf "rootpath%s" ($.Scratch.Get "folder"))) $slug ($.Scratch.Get "folder")) -}}
        {{- $name := .Name -}}{{- $.Scratch.SetInMap (printf "slug-%s" $slug) $value (printf "audits/%s/%s/" $slug $value) -}}
    {{- end -}}
    {{- $.Scratch.SetInMap "jsonslug" $slug ($.Scratch.Get (printf "slug-%s" $slug)) -}}
    {{- end -}}
    {{- end -}}
{{- end -}}
{{- $.Scratch.Set "title" "" -}}
{{- $.Scratch.Set "pages" slice -}}
{{- range $slug, $value := ($.Scratch.Get "jsonslug") -}}
    {{- if $context.GetPage (printf "audits/%s" $slug) -}}
    {{- with $context.GetPage (printf "audits/%s" $slug) -}}{{- $.Scratch.Set "title" .Title -}}{{- end -}}
    {{- $.Scratch.Add "pages" (dict "site" (urlize $.Site.Title) "slug" $slug) -}}
    {{- $.Scratch.Delete "type" }}
    {{- range $type, $path := $value -}}
    {{- $.Scratch.Delete $type }}
      {{- if eq $type "accessibility" -}}
        {{- $accessibility := (index (partial "render/lastfile.html" (dict "context" $context "project" $slug "type" "accessibility")) "auditfile-path") -}}
        {{- if (partialCached "render/accessibility" (dict "context" $context "auditfile" $accessibility)) -}}
          {{- range $idx, $value := ((index (partial "render/lastfile.html" (dict "context" $context "project" $slug "type" "accessibility")) "auditfile-all-path")) -}}
              {{- $.Scratch.SetInMap $type $idx (dict "url" . "score" ((partialCached "render/accessibility" (dict "context" $context "auditfile" . ) . ).scores)) -}}
          {{- end -}}
          {{- $.Scratch.SetInMap "type" $type (dict "url" (printf "%sindex.json" $path) "scores" ($.Scratch.Get $type)) -}}
        {{- end -}}
      {{- end -}}
      {{- if eq $type "performance" -}}
        {{- if ((partial "render/performance" (dict "context" $context "auditfile" ((index (partialCached "render/lastfile.html" (dict "context" $context "project" $slug "type" "lighthouse") $slug) "auditfile-path"))))) -}}
          {{ range $idx, $value := (index (partial "render/lastfile.html" (dict "context" $context "project" $slug "type" "lighthouse")) "auditfile-all-path") }}
              {{- $.Scratch.SetInMap $type $idx (dict "url" . "score" (partialCached "render/performance" (dict "context" $context "file" (getJSON .)) . )) -}}
          {{- end -}}
          {{- $.Scratch.SetInMap "type" $type (dict "url" (printf "%sindex.json" $path) "scores" ($.Scratch.Get $type)) -}}
        {{- end -}}
      {{- end -}}
      {{- end -}}
      {{- end -}}
      {{- $.Scratch.SetInMap "slug" $slug (dict "title" ($.Scratch.Get "title") "slug" $slug "type" ($.Scratch.Get "type")) -}}
      {{- end -}}
{{- (dict
  "name" .Site.Title
  "description" .Site.Params.organisation
  "websites" ($.Scratch.Get "slug")
  "pages" ($.Scratch.Get "pages")
) | jsonify -}}
