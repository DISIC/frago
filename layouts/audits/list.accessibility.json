{{- $patharray := split (path.Dir .Path) "/" -}}
{{- $project :=  (index $patharray 1) -}}
{{- $context := . -}}
{{- $.Scratch.Delete "scores" -}}
{{- if and (gt (len $patharray) 1) ($project) -}}
  {{- with .GetPage (printf "audits/%s/_index.md" $project) -}}{{- $.Scratch.Set "title" .Title -}}{{- end -}}
  {{- partialCached "render/context.html" (dict "context" $context "project" $project) $project -}}
  {{- with (index (partialCached "render/lastfile.html" (dict "context" . "project" $project "type" "accessibility") $project "accessibility") "auditfile-all-path") -}}
    {{- range $key, $path := . -}}
        {{- $file := (partialCached "render/accessibility" (dict "context" $context "project" $project "auditfile" .) .) -}}
        {{- $.Scratch.SetInMap "score" (string $key) (dict "score" $file.scores "context" ($context.Scratch.Get "context")) -}}
    {{- end -}}
  {{- end -}}
  {{- (dict
    "name" ($.Scratch.Get "title")
    "slug" $project
    "rgaa" ($.Scratch.Get "score")
  ) | jsonify -}}
  {{- else -}}
  {{ $.Scratch.Delete "projectsmap"}}
  {{- with .Pages -}}
  {{- range $id, $value := . -}}
  {{- $.Scratch.Delete "score" -}}
  {{- $.Scratch.Delete "scoresmap" -}}
    {{ $project := (index (split (path.Dir .Path) "/") 1) }}
    {{- with (index (partialCached "render/lastfile.html" (dict "context" . "project" $project "type" "accessibility") $project "accessibility") "auditfile-all-path") -}}
      {{- range $key, $path := . -}}
          {{- $.Scratch.SetInMap "score" (string $key) (partialCached "render/accessibility" (dict "context" $value "project" $project "auditfile" .) .) -}}
      {{- end -}}
      {{- $.Scratch.SetInMap "scoresmap" (string $id) ($.Scratch.Get "score") -}}
    {{- end -}}
    {{ if ($.Scratch.Get "scoresmap") }}
      {{- $.Scratch.SetInMap "projectsmap" (string $project) (dict "scores" ($.Scratch.Get "scoresmap") "name" .Title "slug" $project) -}}
    {{- end -}}
  {{- end -}}
  {{- (dict
    "projects" ($.Scratch.Get "projectsmap")
  ) | jsonify -}}
  {{- end -}}
{{- end -}}
